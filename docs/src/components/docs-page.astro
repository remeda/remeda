---
import {
  getNavbarEntries,
  type CategorizedFunctions,
} from "@/lib/navbar-entries";
import { Navbar } from "./navbar";
import Prose from "@/components/prose.astro";
import { getCollection, type CollectionEntry } from "astro:content";

const COLLECTION = "docs";

type Props = {
  readonly categorized: CategorizedFunctions;
  readonly collectionQuery: (
    entry: CollectionEntry<typeof COLLECTION>,
  ) => boolean;
};

const { categorized, collectionQuery } = Astro.props;

const [navbarEntries, collection] = await Promise.all([
  getNavbarEntries(categorized, collectionQuery),
  getCollection(COLLECTION, collectionQuery),
]);

const renderedCollection = await Promise.all(
  collection.map(async (entry) => ({
    ...entry,
    rendered: await entry.render(),
  })),
);
---

<div class="flex flex-1 gap-8 p-8 pt-0">
  <aside class="sticky top-24 hidden h-[calc(100dvh-8rem)] w-64 md:block">
    <Navbar pathname={Astro.url.pathname} entries={navbarEntries} client:load />
  </aside>
  <main class="flex-1 space-y-8">
    {
      renderedCollection.map(({ slug, rendered: { Content } }) => (
        <Prose id={slug}>
          <Content />
        </Prose>
      ))
    }
    <slot />
  </main>
</div>
