---
import type { FunctionParam, FunctionReturn } from "@/lib/transform";
import CodeBlock from "./code-block.astro";
import { MethodSignature } from "./signature";

// TODO: signature shouldn't be nullish, we should fail the build instead!
const FALLBACK_SIGNATURE = "//! Missing Signature!";

type Props = {
  readonly variant: string | undefined;
  readonly signature: string | undefined;
  readonly args: ReadonlyArray<FunctionParam>;
  readonly returns: FunctionReturn;
  readonly example: string | undefined;
};

const { variant, signature, args, returns, example } = Astro.props;
---

<section class="flex flex-col gap-2">
  {
    variant !== undefined && (
      <h6 class="text-sm font-bold text-secondary-foreground">{variant}</h6>
    )
  }
  <MethodSignature args={args} returns={returns} client:load>
    <CodeBlock code={signature ?? FALLBACK_SIGNATURE} />
  </MethodSignature>
  {
    example !== undefined && (
      <section class="text-xs lg:text-base">
        <CodeBlock code={example} />
      </section>
    )
  }
</section>
