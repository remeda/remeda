---
import CodeBlock from '@/components/code-block.astro';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { MethodSignature } from '@/components/signature';
import { getTags, type FunctionData } from '@/data';
import { Badge } from '@/components/ui/badge';
import { FunctionTag } from '@/components/function-tag';

interface Props {
  func: FunctionData;
}

const { func } = Astro.props;

const tags = getTags(func);
---

<Card id={func.name} className="scroll-mt-20">
  <CardHeader>
    <div class="flex items-center gap-2">
      <CardTitle className="text-2xl">{func.name}</CardTitle>

      <Badge className="ml-auto bg-primary text-primary-foreground">
        {func.category}
      </Badge>

      {tags.map(tag => <FunctionTag tag={tag} />)}
    </div>

    <div class="max-w-prose text-balance text-sm text-muted-foreground">
      {func.description && <p set:html={func.description} />}
    </div>
  </CardHeader>

  <CardContent className="grid gap-6 overflow-x-auto">
    {
      func.methods.map(
        method =>
          method.signature !== undefined && (
            <div class="flex flex-col gap-2">
              {method.tag !== undefined && <p>{method.tag}</p>}

              <MethodSignature
                args={method.args}
                returns={method.returns}
                client:load
              >
                <CodeBlock code={method.signature} />
              </MethodSignature>

              {method.example !== undefined && (
                <CodeBlock code={method.example} />
              )}
            </div>
          )
      )
    }
  </CardContent>
</Card>
