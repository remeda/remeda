---
import CodeBlock from "@/components/code-block.astro";
import { FunctionTag } from "@/components/function-tag";
import Markdown from "@/components/markdown.astro";
import { MethodSignature } from "@/components/signature";
import { Badge } from "@/components/ui/badge";
import { buttonVariants } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { getTags } from "@/lib/get-tags";
import type { DocumentedFunction } from "@/lib/transform";
import { GitHubLogoIcon } from "@radix-ui/react-icons";

interface Props {
  func: DocumentedFunction;
}

const { func } = Astro.props;
---

<Card id={func.name} className="scroll-mt-20">
  <CardHeader>
    <div class="sm:flex sm:items-center sm:gap-2">
      <CardTitle className="text-2xl">{func.name}</CardTitle>

      <Badge className="ml-auto bg-primary text-primary-foreground">
        {func.category}
      </Badge>

      {getTags(func).map((tag) => <FunctionTag tag={tag} />)}

      {
        func.sourceUrl !== undefined && (
          <a
            href={func.sourceUrl}
            target="_blank"
            class={buttonVariants({ variant: "secondary", size: "sm" })}
            title="View source on Github"
          >
            <GitHubLogoIcon />
            <span class="sr-only">View source on GitHub</span>
          </a>
        )
      }
    </div>
    {func.description !== undefined && <Markdown markdown={func.description} />}
  </CardHeader>

  <CardContent className="grid gap-6">
    {
      func.methods.map(
        (method) =>
          method.signature !== undefined && (
            <div class="flex flex-col gap-2">
              {method.tag !== undefined && <p>{method.tag}</p>}
              <MethodSignature
                args={method.args}
                returns={method.returns}
                client:load
              >
                <CodeBlock code={method.signature} />
              </MethodSignature>
              {method.example !== undefined && (
                <section class="text-xs lg:text-base">
                  <CodeBlock code={method.example} />
                </section>
              )}
            </div>
          ),
      )
    }
  </CardContent>
</Card>
