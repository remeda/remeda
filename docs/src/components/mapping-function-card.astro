---
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { name as mappingCollectionName } from "@/content/mapping/content.config";
import { mappingUrl } from "@/lib/mapping/urls";
import { ArrowRightIcon, ExternalLinkIcon } from "@radix-ui/react-icons";
import { getEntry, render } from "astro:content";
import invariant from "tiny-invariant";
import GithubEdit from "./github-edit.astro";
import Prose from "./prose.astro";
import { Badge } from "./ui/badge";
import { buttonVariants } from "./ui/button";

type Props = {
  readonly name: string;
  readonly library: string;
};

const { name, library } = Astro.props;

const contentId = `${library}/${name}`;
const entry = await getEntry(mappingCollectionName, contentId);
invariant(entry !== undefined, `No entry for slug: ${contentId}`);

const { Content } = await render(entry);

const mappedUrl = mappingUrl(library, name);
---

<Card id={name} className="scroll-mt-24">
  <CardHeader>
    <div class="flex gap-2 overflow-hidden">
      <CardTitle className="flex-1 truncate text-2xl">
        {name}
      </CardTitle>
      <a
        class={buttonVariants({ variant: "secondary", size: "sm" })}
        href={mappedUrl}
      >
        <ExternalLinkIcon />
      </a>
      <Badge className="hidden h-8 sm:flex">{entry.data.category}</Badge>
      <GithubEdit entry={entry} />
    </div>
  </CardHeader>
  <CardContent className="space-y-3">
    {
      entry.data.remeda !== undefined && (
        <h6 class="flex items-center gap-1 text-xl font-medium">
          <ArrowRightIcon className="ms-2 size-5" />
          <a href={`/docs#${entry.data.remeda}`} class="truncate text-primary">
            {entry.data.remeda}
          </a>
        </h6>
      )
    }
    {
      entry.body !== "" && (
        <Prose>
          <Content />
        </Prose>
      )
    }
  </CardContent>
</Card>
