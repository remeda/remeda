---
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { mappingUrl, type Library } from "@/lib/mappings";
import { ArrowRightIcon } from "@radix-ui/react-icons";
import { getEntry } from "astro:content";
import invariant from "tiny-invariant";
import GithubEdit from "./github-edit.astro";
import Prose from "./prose.astro";
import SmartLink from "./smart-link.astro";
import { Badge } from "./ui/badge";

const COLLECTION = "mapping";

type Props = {
  readonly name: string;
  readonly library: Library;
};

const { name, library } = Astro.props;

const slug = `${library}/${name}`.toLowerCase();
const entry = await getEntry(COLLECTION, slug);
invariant(entry !== undefined, `No entry for slug: ${slug}`);

const { Content } = await entry.render();

const mappedUrl = mappingUrl(library, name);
---

<Card id={name} className="scroll-mt-24">
  <CardHeader>
    <div class="flex gap-2 overflow-hidden">
      <CardTitle
        className="flex flex-1 flex-wrap items-center gap-2 overflow-hidden text-2xl"
      >
        <div class="flex items-center gap-2">
          {name}
          <SmartLink href={mappedUrl}>[{library}]</SmartLink>
        </div>
        {
          entry.data.remeda !== undefined && (
            <div class="flex items-center gap-2 overflow-hidden">
              <ArrowRightIcon className="size-5" />
              <span class="truncate">{entry.data.remeda}</span>
              <SmartLink href={`/docs#${entry.data.remeda}`}>
                [remeda]
              </SmartLink>
            </div>
          )
        }
      </CardTitle>
      <Badge className="hidden h-8 sm:flex">{entry.data.category}</Badge>
      <GithubEdit entry={entry} />
    </div>
  </CardHeader>
  {
    entry.body !== "" && (
      <CardContent>
        <Prose>
          <Content />
        </Prose>
      </CardContent>
    )
  }
</Card>
