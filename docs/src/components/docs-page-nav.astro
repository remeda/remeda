---
import {
  forNavbar as articlesForNavbar,
  getArticles,
} from "@/lib/articles/entries";
import { v2Functions, v2NavBarEntries } from "@/lib/entries";
import {
  getV1Functions,
  forNavbar as v1FunctionsForNavbar,
} from "@/lib/v1/entries";
import {
  migrationMappingNavBarEntries,
  getMigrationMappings,
} from "@/lib/mapping/entries";
import { MobileNav } from "./mobile-nav";
import { VERSIONS } from "./version-selector";

const MIGRATION_REGEXP = /^\/migrate\/(?<library>\w+)\/?$/iu;

const { pathname } = Astro.url;
const normalizedPathname = pathname.replace(/\/$/, "");

const migrationLibrary = MIGRATION_REGEXP.exec(pathname)?.groups?.library;

const navbarEntries =
  migrationLibrary !== undefined
    ? migrationMappingNavBarEntries(
        await getMigrationMappings(migrationLibrary),
      )
    : normalizedPathname === VERSIONS.v1.path
      ? v1FunctionsForNavbar(await getV1Functions())
      : normalizedPathname === VERSIONS.latest.path
        ? v2NavBarEntries(await v2Functions())
        : [];

const articlesNavbarEntries = articlesForNavbar(await getArticles(pathname));
---

<MobileNav
  showVersionSelector={migrationLibrary === undefined}
  title={migrationLibrary}
  pathname={pathname}
  categories={[...articlesNavbarEntries, ...navbarEntries]}
  client:media="(max-width: 767px)"
/>
