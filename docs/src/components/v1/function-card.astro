---
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { functionsV1CollectionName } from "@/content/functions/v1/content.config";
import { name as migrationCollectionName } from "@/content/v1-migration/content.config";
import type { InferEntrySchema } from "astro:content";
import { getCollection, render } from "astro:content";
import FunctionApi from "../function-api.astro";
import FunctionDescription from "../function-description.astro";
import Prose from "../prose.astro";
import { MigrationBox } from "./migration-box";

type Props = {
  readonly category: string;
  readonly internalNames: ReadonlySet<string>;
  readonly data: InferEntrySchema<typeof functionsV1CollectionName>;
};

const { data, category, internalNames } = Astro.props;

// We use getCollection with a filter here instead of getEntry because not all
// functions have a migration entry and getEntry logs an error if the entry is
// not found, filling our build log with redundant errors.
const [entry] = await getCollection(
  migrationCollectionName,
  ({ id }) => id === data.name,
);
const Migration = entry === undefined ? undefined : await render(entry);
---

{
  // Some of the top-level functions in V1 are namespaces which we don't show
  // in the docs.
  data.kind === "function" && (
    <Card id={data.name} className="scroll-mt-24">
      <CardHeader>
        <FunctionDescription
          category={category}
          func={data}
          internalNames={internalNames}
        />
      </CardHeader>
      {Migration !== undefined && (
        <CardContent>
          <MigrationBox client:load>
            <Prose class="max-w-none prose-h1:text-xl prose-h1:font-bold prose-h2:mb-2 prose-h2:text-lg prose-h2:font-semibold prose-h3:text-base prose-h3:font-semibold prose-p:max-w-prose">
              <Migration.Content />
            </Prose>
          </MigrationBox>
        </CardContent>
      )}
      <CardContent className="grid gap-8">
        {data.signatures.map((signature) => (
          <FunctionApi signature={signature} />
        ))}
      </CardContent>
    </Card>
  )
}
