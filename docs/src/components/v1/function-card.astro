---
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { getTags } from "@/lib/get-tags";
import type { DocumentedFunction } from "@/lib/v1/transform";
import { getEntry } from "astro:content";
import FunctionApi from "../function-api.astro";
import FunctionDescription from "../function-description.astro";
import Prose from "../prose.astro";
import { MigrationBox } from "./migration-box";

const MIGRATION_COLLECTION = "v1-migration";

type Props = {
  readonly func: DocumentedFunction;
};

const { func } = Astro.props;

const entry = await getEntry(MIGRATION_COLLECTION, func.name.toLowerCase());
const Migration = await entry?.render();
---

<Card id={func.name} className="scroll-mt-24">
  <CardHeader>
    <FunctionDescription
      name={func.name}
      category={func.category}
      tags={getTags(func.methods)}
      description={func.description}
      sourceUrl={func.sourceUrl}
    />
  </CardHeader>
  {
    Migration !== undefined && (
      <CardContent>
        <MigrationBox client:load>
          <Prose class="max-w-none prose-h1:text-xl prose-h1:font-bold prose-h2:mb-2 prose-h2:text-lg prose-h2:font-semibold prose-h3:text-base prose-h3:font-semibold prose-p:max-w-prose">
            <Migration.Content />
          </Prose>
        </MigrationBox>
      </CardContent>
    )
  }
  <CardContent className="grid gap-8">
    {
      func.methods.map((method) => (
        <FunctionApi
          args={method.args}
          example={method.example}
          returns={method.returns}
          signature={method.signature}
          variant={method.tag}
        />
      ))
    }
  </CardContent>
</Card>
