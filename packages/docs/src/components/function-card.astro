---
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { functionsCollectionName } from "@/content/functions/content.config";
import { hasTag, tagContent } from "@/lib/tags";
import type { CollectionEntry } from "astro:content";
import { map, pipe, sortBy, uniqueBy } from "remeda";
import FunctionApi from "./function-api.astro";
import FunctionDescription from "./function-description.astro";

type Props = {
  readonly func: CollectionEntry<typeof functionsCollectionName>;
  readonly internalNames: ReadonlySet<string>;
};

const {
  func: { id, data },
  internalNames,
} = Astro.props;

const category = tagContent(data.signatures[0].comment.blockTags, "category");
---

<Card className="scroll-mt-24" id={id}>
  <CardHeader>
    <FunctionDescription
      category={category}
      func={data}
      internalNames={internalNames}
    />
  </CardHeader>
  <CardContent className="grid gap-8">
    {
      pipe(
        data.signatures,
        uniqueBy(({ comment: { blockTags } }) =>
          tagContent(blockTags, "signature"),
        ),
        // When multiple signatures exist, put the dataLast ones last.
        sortBy(({ comment: { blockTags } }) => hasTag(blockTags, "dataLast")),
        map((signature) => <FunctionApi signature={signature} />),
      )
    }
  </CardContent>
</Card>
