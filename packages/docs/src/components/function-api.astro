---
import { hasTag, tagContent } from "@/lib/tags";
import type { Signature } from "@/lib/typedoc/schema";
import CodeBlock from "./code-block.astro";
import { MethodSignature } from "./signature";

type Props = {
  readonly signature: Signature;
};

const {
  signature: {
    comment: { blockTags },
    parameters,
    type,
  },
} = Astro.props;

const variant = hasTag(blockTags, "dataFirst")
  ? "Data First"
  : hasTag(blockTags, "dataLast")
    ? "Data Last"
    : undefined;

const example = tagContent(blockTags, "example");

const signature = tagContent(blockTags, "signature");
---

<section class="flex flex-col gap-2">
  {
    variant !== undefined && (
      <h6 class="text-sm font-bold text-secondary-foreground">{variant}</h6>
    )
  }
  <MethodSignature type={type} parameters={parameters} client:load>
    {signature !== undefined && <CodeBlock code={signature} />}
  </MethodSignature>
  {
    example !== undefined && (
      <section class="text-xs lg:text-base">
        <CodeBlock code={example} />
      </section>
    )
  }
</section>
