name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  typecheck-outputs:
    name: 🚚 Typecheck Outputs / ${{ matrix.typescript-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        typescript-version:
          - '~5.2.0'
          - '~5.1.0'
          - '~5.0.0'
          # We use features that were added in v4.2 of typescript, so that is
          # the lowest we can go here. This also means this is the lowest
          # version we support. When this value changes in the future it needs
          # to be communicated to the users.
          - '~4.4.0'
          - '~4.3.0'
          - '~4.2.0'

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      # Order is important here, we build with the typescript version defined
      # in package.json, before we overrite it for the tests.
      # TODO: We are rebuilding everything several times, our builds aren't very
      # expensive, but we can easily optimize by caching the 'dist' directory
      # once.
      - name: 🏗️ Build
        run: yarn run build

      - name: 📘 Install Typescript
        run: yarn add --dev typescript@${{ matrix.typescript-version }}

      - name: 🔎 Type check
        run: yarn compile:dist

  typecheck-source:
    name: 👷 Typecheck Source
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: yarn compile

  test:
    name: 🧪 Test [Node ${{ matrix.node }}]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
          - 18
          # @typescript-eslint/eslint-plugin v6+ requires Node 16+ so it defines
          # the lower limit to what we can support in our test job. This de-
          # facto defines our minimum supported Node version as we can't run our
          # tests on any older version.
          # This should be fine as Node 14 has reached EOL!
          - 16
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🧪 Run tests
        run: yarn test:ci

  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
      - name: Lint
        run: yarn lint:check

  prettier:
    name: 💄 Formatting (prettier)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
      - name: Prettier
        run: yarn prettier:check

  publish:
    needs:
      - typecheck-source
      - typecheck-outputs
      - test
    if: github.repository == 'remeda/remeda' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
      - name: Build
        run: yarn run build
      - name: Release
        run: npx semantic-release@19
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
