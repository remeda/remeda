name: 📦 CI - Library

on:
  push:
    branches:
      - main
  pull_request:
  # For debugging workflows or for re-triggering releases if they failed on
  # network issues or problems on external 3rd parties.
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write # To allow inline comments for warnings/errors

jobs:
  typecheck:
    name: 👷 Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🚨 Type check
        run: npm --workspace=remeda run check

  test-typing:
    name: Tests/📋 Types [TypeScript ${{ matrix.typescript-version }}]
    needs:
      - typecheck
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        typescript-version:
          - "5.8"
          - "5.7"
          - "5.6"
          - "5.5"
          - "5.4"
          - "5.3"
          - "5.2"
          # This is the current lowest version of typescript we support. Do not
          # change this without bumping a major version. We support up to 4
          # versions back from the latest version of typescript at time of a
          # major release.
          - "5.1"

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      # TODO: We are rebuilding everything several times, our builds aren't very
      # expensive, but we can easily optimize by caching the 'dist' directory
      # once.
      - name: 🏗️ Build
        run: npm --workspace=remeda run build -- --dts-only

      - name: 📘 Install Typescript
        run: npm --workspace=remeda install -D typescript@${{ matrix.typescript-version }}

      - name: 📋 Type tests
        run: npm --workspace=remeda run test:typing

      - name: 🚚 Check Outputs
        run: npm --workspace=remeda run check:dist

  test-runtime:
    name: Tests/🧪 Runtime [Node ${{ matrix.node }}]
    needs:
      - typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 24
          - 22
          - 20
          - 18
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🧪 Run tests
        run: npm --workspace=remeda run test:runtime

  lint:
    name: 🧹 Lint
    needs:
      - typecheck
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🧹 Lint
        run: npm --workspace=remeda run lint

  formatting:
    name: 💄 Format
    needs:
      - typecheck
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 💄 Format
        run: npm --workspace=remeda run format

  slowTypes:
    name: 🐢 Slow Types
    needs:
      - typecheck
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🐢 Slow Types
        run: npm --workspace=remeda run publish:jsr -- --dry-run

  preview:
    name: 🧑‍🔬 Preview
    needs:
      - test-typing
      - test-runtime
      - lint
      - formatting
      - slowTypes

    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🏗️ Build
        run: npm --workspace=remeda run build

      - name: 🧑‍🔬 Preview
        run: npm --workspace=remeda run publish:preview

  release:
    name: 🚀 Release
    needs:
      - test-typing
      - test-runtime
      - lint
      - formatting
      - slowTypes

    if: github.repository == 'remeda/remeda' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    permissions:
      # @see https://semantic-release.gitbook.io/semantic-release/recipes/ci-configurations/github-actions#github-workflows-release.yml-configuration-for-node-projects
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔏 Audit Supply Chain
        run: npm --workspace=remeda audit signatures

      - name: 🏗️ Build
        run: npm --workspace=remeda run build

      - name: 👮 Lint output
        run: npm --workspace=remeda run lint:build

      - name: 🚀 Release
        run: npm --workspace=remeda run release
        env:
          NPM_CONFIG_PROVENANCE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-jsr:
    name: 🦕 Publish to JSR.io
    needs:
      - release

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: 🫥 Extract Missing Version
        id: extract-missing
        run: |
          # Get the latest version tag
          VERSION=$(
            git ls-remote --tags https://github.com/${{ github.repository }}.git \
            | grep --only-matching --extended-regexp 'v[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort --version-sort \
            | tail -1 \
            | tr -d 'v'
          )

          # Get the list of published versions from JSR.io and check if the 
          # latest version has already been published. If it has, we're done;
          # otherwise, we set the required (unpublished) version for the rest 
          # of the job.
          curl -s "https://jsr.io/@remeda/remeda/meta.json" \
          | jq --exit-status --arg version $VERSION '.versions | has($version)' >/dev/null \
          || echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: ⬇️ Checkout Repo
        if: steps.extract-missing.outputs.version != ''
        uses: actions/checkout@v4
        with:
          # We want to publish the required tag and not the latest commit.
          ref: v${{ steps.extract-missing.outputs.version }}

      - name: ⎔ Setup Node
        if: steps.extract-missing.outputs.version != ''
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 📥 Download Dependencies
        if: steps.extract-missing.outputs.version != ''
        uses: bahmutov/npm-install@v1
        env:
          HUSKY: 0

      - name: 📝 Update Version
        if: steps.extract-missing.outputs.version != ''
        working-directory: packages/remeda
        run: |
          jq --arg version ${{ steps.extract-missing.outputs.version }} '.version = $version' jsr.json > jsr.json.tmp \
          && mv jsr.json.tmp jsr.json

      - name: 🦕 Publish to JSR.io
        if: steps.extract-missing.outputs.version != ''
        # We allow dirty here because our jsr.json file has been modified and we
        # don't want to commit it back to the repo.
        run: npm --workspace=remeda run publish:jsr -- --allow-dirty
